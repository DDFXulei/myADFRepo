{
	"name": "dataflow8",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText59",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText60",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "SurrogateKey1"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Select2"
				},
				{
					"name": "Select4"
				},
				{
					"name": "Union1"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "DerivedColumn3"
				},
				{
					"name": "Join2"
				},
				{
					"name": "Select6"
				}
			],
			"script": "source(output(\n\t\t{_col0_} as string,\n\t\t{_col1_} as string,\n\t\t{_col2_} as string,\n\t\t{_col3_} as string,\n\t\t{_col4_} as string,\n\t\t{_col5_} as string,\n\t\t{_col6_} as string,\n\t\t{_col7_} as string,\n\t\t{_col8_} as string,\n\t\t{_col9_} as string,\n\t\t{_col10_} as string,\n\t\t{_col11_} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 keyGenerate(output(row_no as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 split(row_no == 1,\n\trow_no == 2,\n\tdisjoint: false) ~> ConditionalSplit1@(metadata, headers, data)\nConditionalSplit1@metadata select(mapColumn(\n\t\tcolumn0 = {_col0_}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(ADDITIONALCOLUMN1 = split(split(column0,'-')[3],'/')[4],\n\t\tADDITIONALCOLUMN2 = split(split(split(column0,'-')[5],'(')[2],')')[1],\n\t\tADDITIONALCOLUMN3 = split(split(split(column0,'-')[5],'(')[2],')')[2]) ~> DerivedColumn1\nConditionalSplit1@data, DerivedColumn2 join(row_no>2,\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> Join1\nDerivedColumn1 select(mapColumn(\n\t\tADDITIONALCOLUMN1,\n\t\tADDITIONALCOLUMN2,\n\t\tADDITIONALCOLUMN3\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nJoin1 select(mapColumn(\n\t\t{_col0_},\n\t\t{_col1_},\n\t\t{_col2_},\n\t\t{_col3_},\n\t\t{_col4_},\n\t\t{_col5_},\n\t\t{_col6_},\n\t\t{_col7_},\n\t\t{_col8_},\n\t\t{_col9_},\n\t\t{_col10_},\n\t\t{_col11_},\n\t\tADDITIONALCOLUMN1,\n\t\tADDITIONALCOLUMN2,\n\t\tADDITIONALCOLUMN3,\n\t\tFileName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nSelect6, Select4 union(byName: true)~> Union1\nSelect2 derive(FileName = concat(ADDITIONALCOLUMN2,'.',ADDITIONALCOLUMN3,'_',ADDITIONALCOLUMN1,'.csv')) ~> DerivedColumn2\nJoin2 derive(ADDITIONALCOLUMN1 = 'ADDITIONALCOLUMN1',\n\t\tADDITIONALCOLUMN2 = 'ADDITIONALCOLUMN2',\n\t\tADDITIONALCOLUMN3 = 'ADDITIONALCOLUMN3',\n\t\tFileName = concat(ADDITIONALCOLUMN2,'.',ADDITIONALCOLUMN3,'_',ADDITIONALCOLUMN1,'.csv')) ~> DerivedColumn3\nConditionalSplit1@headers, DerivedColumn1 join(row_no==2,\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> Join2\nDerivedColumn3 select(mapColumn(\n\t\t{_col0_},\n\t\t{_col1_},\n\t\t{_col2_},\n\t\t{_col3_},\n\t\t{_col4_},\n\t\t{_col5_},\n\t\t{_col6_},\n\t\t{_col7_},\n\t\t{_col8_},\n\t\t{_col9_},\n\t\t{_col10_},\n\t\t{_col11_},\n\t\tADDITIONALCOLUMN1,\n\t\tADDITIONALCOLUMN2,\n\t\tADDITIONALCOLUMN3,\n\t\tFileName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\nUnion1 sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn:'FileName',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}